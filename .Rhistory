warnings()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
setwd("~/rpackages/opensciPackR")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
warnings()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
opensciPackR::createOpenSciPackage(testpack, "C:/Users/LaraK/Documents/test")
opensciPackR::createOpenSciPackage("testpack", "C:/Users/LaraK/Documents/test")
here::dr_here()
opensciPackR::createOpenSciPackage("testpack", "C:/Users/LaraK/Documents/test")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
getwd()
opensciPackR::createOpenSciPackage("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::createOpenSciPackage("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::createOpenSciPackage("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
opensciPackR::createOpenSciPackage("testpack", "C:/Users/LaraK/Documents/rpackages")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
path <- "C:/Users/LaraK/Documents/rpackages"
file.path(path, "R", "data.R")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
getwd()
path <- C:/Users/LaraK/Documents/rpackages/testpack/R/data.R
path <- "C:/Users/LaraK/Documents/rpackages/testpack/R/data.R"
doc_file <- file.path(path, "R", "data.R")
file.create(doc_file)
path <- "C:/Users/LaraK/Documents/rpackages/testpack"
doc_file <- file.path(path, "R", "data.R")
file.create(doc_file)
file.path("R/", paste0("data", ".R", collapse = NULL))
file.path("R", paste0("data", ".R", collapse = NULL))
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpack", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("makispackage", "C:/Users/LaraK/Documents/rpackages")
source(paste0(path, "data-raw", paste0(data_name, ".R", collapse = NULL)))
path <- "C:/Users/LaraK/Documents/rpackages"
source(paste0(path, "data-raw", paste0(data_name, ".R", collapse = NULL)))
new_data_name <- "data"
source(paste0(path, "data-raw", paste0(data_name, ".R", collapse = NULL)))
source(paste0(path, "data-raw", paste0(new_data_name, ".R", collapse = NULL)))
paste0(path, "data-raw", paste0(new_data_name, ".R", collapse = NULL)
)
devtools::load_all(".")
opensciPackR::create_openscipkg("makispackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("makispackage", "C:/Users/LaraK/Documents/rpackages")
writeLines(c("#' Data analysis function",
"#' @export",
"analyze_data <- function() {",
"  # Load the cleaned data",
paste0(new_data_name, " <- opensciPackR::", new_data_name),
"  #",
"  # Add data analysis code here, for example:",
"  # Analyze the data",
"  # 1. Summary Statistics",
paste0(new_data_name, " %>%"),
"tidycomm::describe() %>%",
"  #",
"  # 2. Data Visualization",
paste0(new_data_name, " %>%"),
"dplyr::select(tidyselect::where(is.numeric)) %>%",
"dplyr::select(tidyselect::last_col()) %>%",
"tidycomm::describe() %>%",
"tidycomm::visualize()",
"  #",
"  # 3. Apply Statistical Tests if Needed",
"  # For example, you might want to run a correlation",
paste0(new_data_name, " %>%"),
"dplyr::select(tidyselect::where(is.numeric)) %>%",
"dplyr::select(tidyselect::last_col(1):tidyselect::last_col()) %>%",
"tidycomm::correlate()",
# 4. Model Building
# You might want to build a regression model for example
# model <- lm(column1 ~ column2, data=data)
# summary(model)
"}"),
"R/analyze_data.R")
library(tidycomm)
data <- tidycomm::WoJ
data %>% regress(autonomy_selection, ethics_1)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
usethis::use_package(stringr)
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all(".")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
update_readme <- function(path = NULL, description) {
# If no path is provided, use the current working directory
if (is.null(path)) {
path <- getwd()
}
# Create the file path to the README.md file
readme_file_path <- file.path(path, "README.md")
# Read the README.md file
readme <- readr::read_lines(readme_file_path)
# Replace the placeholder for the description
readme <- stringr::str_replace_all(readme, "## The goal of testpackage is to ...", paste("## Package Description\n", description))
# Locate the Installation section
install_start <- which(stringr::str_detect(readme, "## Installation"))
# Create the new Installation section
new_installation <- c("## Installation",
"",
"You can install the released version of {package_name} from [CRAN](https://CRAN.R-project.org) with:",
"",
"```r",
"install.packages('{package_name}')",
"```",
"",
"And the development version from [GitHub](https://github.com/) with:",
"",
"```r",
"# install.packages('devtools')",
"devtools::install_github('{package_name}')",
"```",
"\n## Usage\n",
"This package provides the following main functions:\n",
"- `prepare_data()`: This function does...\n",
"  Example usage:\n",
"  ```r\n",
"  data <- prepare_data(...)\n",
"  ```\n",
"- `analysis_data()`: This function is used to...\n",
"  Example usage:\n",
"  ```r\n",
"  result <- analysis_data(data, ...)\n",
"  ```\n",
"\n## Acknowledgments\n",
"This package was created using [openscipackR](https://github.com/openscipackR).\n",
"\n## License\n",
"This project is licensed under the terms of the MIT license.\n")
# Replace the entire section from the Installation section onward
readme <- c(readme[1:(install_start-1)], new_installation)
# Write the updated README.md file
readr::write_lines(readme, readme_file_path)
# Return a message indicating the README.md was updated
return("README.md updated successfully")
}
description <- "MY test description"
update_readme(path = "C:/Users/LaraK/Documents/rpackages/testpackage", description = description)
#' Update the README.md file
#'
#' This function updates the README.md file of the resulting package with the most important information.
#' It uses the `readr` and `glue` packages to read the DESCRIPTION file of the R package and
#' glue the different components into a well-structured README.md file.
#'
#' @param path The directory of the package. Defaults to the current working directory.
#' @param description A string that contains the package description provided by user input.
#'
#' @export
#' @examples
#' \dontrun{
#' update_readme(path = "/myPath", description = "A brief description of the package")
#' }
update_readme <- function(path = NULL, description) {
# If no path is provided, use the current working directory
if (is.null(path)) {
path <- getwd()
}
# Create the file path to the README.md file
readme_file_path <- file.path(path, "README.md")
# Read the README.md file
readme <- readr::read_lines(readme_file_path)
# Locate the Installation section
install_start <- which(stringr::str_detect(readme, "The goal of testpackage is to ..."))
# Create the new Installation section
new_installation <- c(paste0(description, "\n"),
"## Installation",
"",
"You can install the released version of {package_name} from [CRAN](https://CRAN.R-project.org) with:",
"",
"```r",
"install.packages('{package_name}')",
"```",
"",
"And the development version from [GitHub](https://github.com/) with:",
"",
"```r",
"# install.packages('devtools')",
"devtools::install_github('{package_name}')",
"```",
"\n## Usage\n",
"This package provides the following main functions:\n",
"- `prepare_data()`: This function does...\n",
"  Example usage:\n",
"  ```r\n",
"  data <- prepare_data(...)\n",
"  ```\n",
"- `analysis_data()`: This function is used to...\n",
"  Example usage:\n",
"  ```r\n",
"  result <- analysis_data(data, ...)\n",
"  ```\n",
"\n## Acknowledgments\n",
"This package was created using [openscipackR](https://github.com/openscipackR).\n",
"\n## License\n",
"This project is licensed under the terms of the MIT license.\n")
# Replace the entire section from the Installation section onward
readme <- c(readme[1:(install_start-1)], new_installation)
# Write the updated README.md file
readr::write_lines(readme, readme_file_path)
# Return a message indicating the README.md was updated
return("README.md updated successfully")
}
description <- "MY test description"
update_readme(path = "C:/Users/LaraK/Documents/rpackages/testpackage", description = description)
devtools::load_all("~/rpackages/openscipackr")
rm(list = c("update_readme"))
devtools::load_all("~/rpackages/openscipackr")
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
update_readme <- function(path = NULL, description) {
# If no path is provided, use the current working directory
if (is.null(path)) {
path <- getwd()
}
# Create the file path to the README.md file
readme_file_path <- file.path(path, "README.md")
# Read the README.md file
readme <- readr::read_lines(readme_file_path)
# Locate the Installation section
start <- which(stringr::str_detect(readme, "The goal of testpackage is to ..."))
# Create the new Installation section
new_text <- c(paste0(description, "\n"),
"## Installation",
"",
"You can install the released version of {package_name} from [CRAN](https://CRAN.R-project.org) with:",
"",
"```r",
"install.packages('{package_name}')",
"```",
"",
"And the development version from [GitHub](https://github.com/) with:",
"",
"```r",
"# install.packages('devtools')",
"devtools::install_github('{package_name}')",
"```",
"\n## Usage\n",
"This package provides the following main functions:\n",
"- `prepare_data()`: This function does...\n",
"  Example usage:\n",
"  ```r\n",
"  data <- data %>% prepare_data()\n",
"  ```\n",
"- `analyze_data()`: This function is used to...\n",
"  Example usage:\n",
"  ```r\n",
"  result <- data %>% analyze_data()\n",
"  ```\n",
"\n## Acknowledgments\n",
"This package was created using [openscipackR](https://github.com/openscipackR).\n",
"\n## License\n",
"This project is licensed under the terms of the MIT license.\n")
# Replace the entire section from the section onward
readme <- c(readme[1:(start-1)], new_text)
# Write the updated README.md file
readr::write_lines(readme, readme_file_path)
# Return a message indicating the README.md was updated
return("README.md updated successfully")
}
description <- "MY test description"
update_readme(path = "C:/Users/LaraK/Documents/rpackages/testpackage", description = description)
#' Update the README.md file
#'
#' This function updates the README.md file of the resulting package with the most important information.
#' It uses the `readr` and `glue` packages to read the DESCRIPTION file of the R package and
#' glue the different components into a well-structured README.md file.
#'
#' @param path The directory of the package. Defaults to the current working directory.
#' @param description A string that contains the package description provided by user input.
#'
#' @export
#' @examples
#' \dontrun{
#' update_readme(path = "/myPath", description = "A brief description of the package")
#' }
update_readme <- function(path = NULL, description) {
# If no path is provided, use the current working directory
if (is.null(path)) {
path <- getwd()
}
# Create the file path to the README.md file
readme_file_path <- file.path(path, "README.md")
# Read the README.md file
readme <- readr::read_lines(readme_file_path)
# Locate the section
start <- which(stringr::str_detect(readme, "The goal of"))
# Create the new text
new_text <- c(paste0(description, "\n"),
"## Installation",
"",
"You can install the released version of {package_name} from [CRAN](https://CRAN.R-project.org) with:",
"",
"```r",
"install.packages('{package_name}')",
"```",
"",
"And the development version from [GitHub](https://github.com/) with:",
"",
"```r",
"# install.packages('devtools')",
"devtools::install_github('{package_name}')",
"```",
"\n## Usage\n",
"This package provides the following main functions:\n",
"- `prepare_data()`: This function does...\n",
"  Example usage:\n",
"  ```r\n",
"  data <- data %>% prepare_data()\n",
"  ```\n",
"- `analyze_data()`: This function is used to...\n",
"  Example usage:\n",
"  ```r\n",
"  result <- data %>% analyze_data()\n",
"  ```\n",
"\n## Acknowledgments\n",
"This package was created using [openscipackR](https://github.com/openscipackR).\n",
"\n## License\n",
"This project is licensed under the terms of the MIT license.\n")
# Replace the entire section from the section onward
readme <- c(readme[1:(start-1)], new_text)
# Write the updated README.md file
readr::write_lines(readme, readme_file_path)
# Return a message indicating the README.md was updated
return("README.md updated successfully")
}
description <- "MY test description"
update_readme(path = "C:/Users/LaraK/Documents/rpackages/testpackage", description = description)
#' Update the README.md file
#'
#' This function updates the README.md file of the resulting package with the most important information.
#' It uses the `readr` and `glue` packages to read the DESCRIPTION file of the R package and
#' glue the different components into a well-structured README.md file.
#'
#' @param path The directory of the package. Defaults to the current working directory.
#' @param description A string that contains the package description provided by user input.
#'
#' @export
#' @examples
#' \dontrun{
#' update_readme(path = "/myPath", description = "A brief description of the package")
#' }
update_readme <- function(path = NULL, description) {
# If no path is provided, use the current working directory
if (is.null(path)) {
path <- getwd()
}
# Create the file path to the README.md file
readme_file_path <- file.path(path, "README.md")
# Read the README.md file
readme <- readr::read_lines(readme_file_path)
# Locate the section
start <- which(stringr::str_detect(readme, "The goal of"))
# Check if the section was found
if (length(start) == 0) {
stop("The section 'The goal of' was not found in the README.md file.")
}
# Create the new text
new_text <- c(paste0(description, "\n"),
"## Installation",
"",
"You can install the released version of {package_name} from [CRAN](https://CRAN.R-project.org) with:",
"",
"```r",
"install.packages('{package_name}')",
"```",
"",
"And the development version from [GitHub](https://github.com/) with:",
"",
"```r",
"# install.packages('devtools')",
"devtools::install_github('{package_name}')",
"```",
"\n## Usage\n",
"This package provides the following main functions:\n",
"- `prepare_data()`: This function does...\n",
"  Example usage:\n",
"  ```r\n",
"  data <- data %>% prepare_data()\n",
"  ```\n",
"- `analyze_data()`: This function is used to...\n",
"  Example usage:\n",
"  ```r\n",
"  result <- data %>% analyze_data()\n",
"  ```\n",
"\n## Acknowledgments\n",
"This package was created using [openscipackR](https://github.com/openscipackR).\n",
"\n## License\n",
"This project is licensed under the terms of the MIT license.\n")
# Replace the entire section from the section onward
readme <- c(readme[1:(start-1)], new_text)
# Write the updated README.md file
readr::write_lines(readme, readme_file_path)
# Return a message indicating the README.md was updated
return("README.md updated successfully")
}
description <- "MY test description"
update_readme(path = "C:/Users/LaraK/Documents/rpackages/testpackage", description = description)
devtools::load_all("~/rpackages/openscipackr")
rm(list = c("update_readme"))
devtools::load_all("~/rpackages/openscipackr")
description <- "MY test description"
update_readme(path = "C:/Users/LaraK/Documents/rpackages/testpackage", description = description)
opensciPackR::create_openscipkg("testpackage", "C:/Users/LaraK/Documents/rpackages")
devtools::load_all("~/rpackages/openscipackr")
